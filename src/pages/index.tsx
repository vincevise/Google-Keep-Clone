import Head from "next/head";

import CreateNote from "@/components/CreateNote";
import AppLayout from "@/components/Layout/AppLayout";
import NotesData from "@/components/NotesData";
import { api } from "@/utils/api";
import { useUser } from "@clerk/nextjs";
import { Inter as FontSans } from "next/font/google";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";


export const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
})

export default function Home() {

  const user = useUser();

  const router = useRouter();

  console.log(router, 'router');
  const { data: notes, isLoading, isError } = api.note.getNotes.useQuery()

  

  const [pinnedNotes, setPinnedNotes] = useState(notes?.filter((x)=>x.pinned && !x.archived) ?? [])
  const [unpinned, setUnpinnedNotes] = useState(notes?.filter((x)=>!x.pinned && !x.archived) ?? [])
  console.log(pinnedNotes, 'pinnedNotes')

  useEffect(()=>{
    if(notes){
      setPinnedNotes(notes.filter((x)=>!x.archived && x.pinned))
      setUnpinnedNotes(notes?.filter((x)=>!x.pinned && !x.archived))
    }
  },[notes])


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppLayout>
      <div className='w-full '>
        <CreateNote/>
        {/* {notes && notes.} */}
         
         <div className='mt-4'>
          <h2 className='text-sm font-medium uppercase text-gray-500 my-4'>
            {pinnedNotes.length > 0 && 'Pinned'}
          </h2>
          {notes && 
            <NotesData notes={pinnedNotes}/>
          }

          <h2 className='text-sm font-medium uppercase text-gray-500 my-4'>
            {pinnedNotes.length > 0 && 'Other'}
          </h2>
          {notes && 
            <NotesData notes={unpinned}/>
          }
         </div>
    </div>
      </AppLayout>

    </>
  );
}
